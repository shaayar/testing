/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Singer as PrismaSinger } from "@prisma/client";

export class SingerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SingerCountArgs, "select">): Promise<number> {
    return this.prisma.singer.count(args);
  }

  async singers(args: Prisma.SingerFindManyArgs): Promise<PrismaSinger[]> {
    return this.prisma.singer.findMany(args);
  }
  async singer(
    args: Prisma.SingerFindUniqueArgs
  ): Promise<PrismaSinger | null> {
    return this.prisma.singer.findUnique(args);
  }
  async createSinger(args: Prisma.SingerCreateArgs): Promise<PrismaSinger> {
    return this.prisma.singer.create(args);
  }
  async updateSinger(args: Prisma.SingerUpdateArgs): Promise<PrismaSinger> {
    return this.prisma.singer.update(args);
  }
  async deleteSinger(args: Prisma.SingerDeleteArgs): Promise<PrismaSinger> {
    return this.prisma.singer.delete(args);
  }
}
